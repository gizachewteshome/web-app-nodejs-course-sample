{"version":3,"sources":["logo.svg","Auth.js","login.js","signup.js","shop.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Auth","token","localStorage","setItem","getItem","removeItem","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","password","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","defineProperty","target","value","_this2","preventDefault","_this$state","Axios","post","then","response","console","log","authenticateUser","data","getToken","error","react_default","a","createElement","onSubmit","type","onChange","required","Component","Signup","email","repeat_password","message","result","document","location","reload","id","Shop","products","axios","get","headers","Authorization","map","product","class","src","image","price","Homepage","show","shown","alert","deauthenticateUser","display","hidden","isUserAuthenticated","onClick","logout","shop","style","login","toggle","src_signup","App","className","logo","alt","src_Homepage","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.0533f782.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","class Auth {\n\n  /**\n   * Authenticate a user. Save a token string in Local Storage\n   *\n   * @param {string} token\n   */\n  static authenticateUser(token) {\n    localStorage.setItem('token', token);\n  }\n\n  /**\n   * Check if a user is authenticated - check if a token is saved in Local Storage\n   *\n   * @returns {boolean}\n   */\n  static isUserAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  /**\n   * Deauthenticate a user. Remove a token from Local Storage.\n   *\n   */\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n   * Get a token value.\n   *\n   * @returns {string}\n   */\n\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n  /**\n   * Get a user id value.\n   *\n   * @returns {string}\n   */\n\n  static getUserId() {\n    return localStorage.getItem('userId');\n  }\n\n}\n\nexport default Auth;\n","import React, {Component} from 'react';\nimport Axios from 'axios';\nimport Auth from './Auth';\n\nclass Login  extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: '',password:''};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(event) {\n          this.setState({[event.target.name]: event.target.value});\n      }\n\n      handleSubmit(event) {\n        event.preventDefault();\n        const {name,password} = this.state;\n        // Send a post request\n        \n        Axios.post('/login',{name,password}).then((response)=>{\n            // access response\n            console.log('Result:',response);\n            // save the token\n            Auth.authenticateUser(response.data.token);\n            console.log('token:',Auth.getToken());\n            this.setState({name:'',password:''});\n            //windows.location.reload();\n        },\n        (error)=>{\n          console.log(error);\n        });\n      }\n    \n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input type=\"text\" value={this.state.name} onChange={this.handleChange} name=\"name\" required/>\n            </label>\n            <label>\n              Password:\n              <input type=\"password\" value={this.state.password} onChange={this.handleChange} name=\"password\" required/>\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        );\n      }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport Axios from 'axios';\nimport \"./signup.css\"\n\nclass Signup  extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: '', email:'', password:'', repeat_password:'', message:''};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(event) {\n          this.setState({[event.target.name]: event.target.value});\n      }\n\n      handleSubmit(event) {\n        event.preventDefault();\n        const {name,password, repeat_password, email} = this.state;\n        if(password != repeat_password){\n            this.setState({message : 'Password does not match with repeat password field!<br/>'});\n        }\n        /*\n        if(validateEmail(email)){\n            this.state.message += 'Email is not valid!<br/>';\n        }\n        */\n        // Send a post request\n        \n        Axios.post('/register',{name,email,password}).then((result)=>{\n            // access results\n            console.log(result);\n        }).then(\n          (response) =>{\n            console.log(response.data);\n            \n            // redirect signed in user to dashboard\n            document.location.reload(true);\n          },\n          (error)=>{\n            console.log(error);\n            document.location.reload(true);          }\n        );\n        \n      }\n    \n      render() {\n        return (\n            <div id=\"signup\">\n            <form onSubmit={this.handleSubmit}>\n            \n            <label>\n              Name:\n              <input type=\"text\" value={this.state.name} onChange={this.handleChange} name=\"name\" required/>\n            </label><br/>\n            <label>\n              Email:\n              <input type=\"text\" value={this.state.email} onChange={this.handleChange} name=\"email\" required/>\n            </label><br/>\n            <label>\n            Password: \n            <input type=\"password\" value={this.state.password} onChange={this.handleChange} name=\"password\" required/>\n            </label><br/>\n            <label>\n            Repead-Password:\n            <input type=\"password\" value={this.state.repeat_password} onChange={this.handleChange} name=\"repeat_password\" required/>\n            </label><br/>\n            <input type=\"submit\" value=\"Submit\" />\n            \n            </form>\n            <div id=\"message\">{this.state.message}</div>\n            </div>\n        );\n      }\n}\n\nexport default Signup;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Auth from './Auth';\n\nclass Shop extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products :[]\n        };\n    }\n\n    componentWillMount(){\n        axios.get('/products',{headers: {\n            Authorization: \"Bearer \" + Auth.getToken()\n         }}).then((response) => {\n            console.log(response.data);\n            this.setState({\n                products: response.data\n            })\n        });\n    }\n\n    render(){\n        let products = this.state.products.map((product)=>{\n            return(\n                <tr>\n                    <td>{product.name}</td>\n                    <td><img class=\"itemShop\" src={product.image}/></td>\n                    <td>{product.price}</td>\n                </tr>\n            )\n        });\n        return(<tbody> {products} </tbody>);\n        \n    }\n}\n\nexport default Shop;","import React, {Component} from 'react';\nimport Axios from 'axios';\nimport Auth from './Auth';\nimport Login from './login';\nimport Signup from './signup';\nimport Shop from './shop';\n\nclass Homepage  extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {show: false};\n    }\n\n    toggle() {\n\t\tthis.setState({\n\t\t\tshown: !this.state.shown\n\t\t});\n    }\n\n    logout(){\n        alert('logout');\n\n        // Add this token to blacklist \n        Axios.post('/logout',{token:Auth.getToken()}).then((result)=>{\n            // access results\n            console.log(result);\n        })\n\n        // Delete token from browser\n        Auth.deauthenticateUser();\n\n        \n    }\n    \n    render() {\n        var shown = {\n\t\t\tdisplay: this.state.shown ? \"none\" : \"block\"\n\t\t};\n\t\t\n\t\tvar hidden = {\n            display: this.state.shown ? \"block\" : \"none\"\n        };\n        \n        return (\n            <div>\n            {Auth.isUserAuthenticated() ? (\n                <div>\n                    <div id=\"logout\"><button onClick={this.logout.bind(this)}>LogOut</button></div>\n                    <Shop/>\n                </div>\n             ) : (\n               <div id=\"login\">\n                 <div style={ shown }>\n                    <Login/><br/>\n                    <button onClick={this.toggle.bind(this)}>Register</button>\n                 </div>\n                 <div style={ hidden }>\n                    <Signup/>\n                </div>\n                  \n               </div>\n           )}\n           </div>\n        );\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './Homepage';\n\nfunction App() {  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Homepage/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}